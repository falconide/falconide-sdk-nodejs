/**
 * FalconideAPIV10Lib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io )
 */

'use strict';

const BaseModel = require('./BaseModel');

/**
 * Creates an instance of EmailDetails
 */
class EmailDetails extends BaseModel {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.fromname = this.constructor.getValue(obj.fromname);
        this.subject = this.constructor.getValue(obj.subject);
        this.from = this.constructor.getValue(obj.from);
        this.replytoid = this.constructor.getValue(obj.replytoid);
        this.tags = this.constructor.getValue(obj.tags);
        this.content = this.constructor.getValue(obj.content);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'fromname', realName: 'fromname' },
            { name: 'subject', realName: 'subject' },
            { name: 'from', realName: 'from' },
            { name: 'replytoid', realName: 'replytoid' },
            { name: 'tags', realName: 'tags' },
            { name: 'content', realName: 'content' },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {};
    }
}

module.exports = EmailDetails;
