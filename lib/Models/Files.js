/**
 * FalconideAPIV10Lib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io )
 */

'use strict';

const BaseModel = require('./BaseModel');

/**
 * Creates an instance of Files
 */
class Files extends BaseModel {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.exampleAttachment1Txt =
          this.constructor.getValue(obj.exampleAttachment1Txt
     || obj['example_attachment1.txt']);
        this.exampleAttachment2Txt =
          this.constructor.getValue(obj.exampleAttachment2Txt
     || obj['example_attachment2.txt']);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'exampleAttachment1Txt', realName: 'example_attachment1.txt' },
            { name: 'exampleAttachment2Txt', realName: 'example_attachment2.txt' },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {};
    }
}

module.exports = Files;
